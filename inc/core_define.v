// MMU SV32
`define PTE_V 0
`define PTE_R 1
`define PTE_W 2
`define PTE_E 3
`define PTE_U 4
`define PTE_G 5
`define PTE_A 6
`define PTE_D 7
`define PTE_RSW 9:8
`define PTE_PPN 31:10
`define VPN1_RANGE 31:22
`define VPN0_RANGE 21:12
`define PTE_WIDTH 32
`define ASID_WIDTH 9

`define L1D_CACHELINE_I  2'b00
`define L1D_CACHELINE_UC 2'b11
`define L1D_CACHELINE_UD 2'b10
`define L1D_CACHELINE_SC 2'b01

`define REFILL_SLOT_ID ID
`define REFILL_MASTER_LOAD 0
`define REFILL_MASTER_TLB 1
`define REFILL_MASTER_STB 2

`define REFILL_AR_ID 1

`define AC_OPCODE_WIDTH 5
`define AC_ID_WIDTH 3
`define AC_DBID_WIDTH 4
`define AC_ADDRESS_WIDTH 32
`define AC_OPCODE_READONCE          4'b0001
`define AC_OPCODE_READNOTSHAREDDIRTY 4'b0010
`define AC_OPCODE_READUNIQUE        4'b0011
`define AC_OPCODE_CLEANUNIQUE       4'b0100
`define AC_OPCODE_CLEANSHARED       4'b0101
`define AC_OPCODE_CLEANINVALID      4'b0110
`define AC_OPCODE_MAKEINVALID       4'b0111


`define RD_ID_WIDTH 5
`define RD_RESP_WIDTH 2
`define RD_RESPERR_WIDTH 2
`define RD_DATA_WIDTH 256
`define RD_DATAID_WIDTH 2
`define RD_RESP_UC 2'b11
`define RD_RESP_UD 2'b10
`define RD_RESP_SC 2'b01
`define RD_RESP_I  2'b00

`define AR_ID_WIDTH 5
`define AR_ID_VICTIM 2'b00
`define AR_ID_REFILL 2'b01
`define AR_ID_STB 2'b11
`define AR_ID_NC_LOAD 5'b10000
`define AR_ID_NC_STORE 5'b10001

`define RR_OPCODE_WIDTH 2
`define RR_ID_WIDTH 5
`define RR_DBID_WIDTH 4
`define RR_RESP_WIDTH 2
`define RR_RESPERR_WIDTH 2
`define RR_OPCODE_COMP 2'b01
`define RR_OPCODE_DBIDRESP 2'b00
`define RR_RESPERR_NORMAL_OK 2'b00
`define RR_RESPERR_EXCL_OK 2'b01

`define AR_OPCODE_WIDTH 5
`define AR_ATTRS_WIDTH 4
`define AR_WAY_WIDTH 5
`define AR_ADDR_WIDTH 32
`define AR_LEN_WIDTH 2
`define AR_SIZE_WIDTH 3
`define AR_SIZE_256BIT 5
`define AR_OPCODE_READNOSNP       5'b00000 // Non Snoopaable Load
`define AR_OPCODE_READONCE          5'b00001 // Instruction Fetch Cacheable Read
`define AR_OPCODE_READNOTSHAREDDIRTY 5'b00010 // DCache Load Miss
`define AR_OPCODE_READUNIQUE        5'b00011 // DCache Store Miss(I)
`define AR_OPCODE_CLEANUNIQUE       5'b00100 // DCache Store Miss(SC)
`define AR_OPCODE_CLEANSHARED       5'b00101 // CMO
`define AR_OPCODE_CLEANINVAILD      5'b00110 // CMO
`define AR_OPCODE_MAKEINVALID       5'b00111 // Full CacheLine Store
`define AR_OPCODE_WRITENOSNP      5'b10000 // Non Snoopable Store
`define AR_OPCODE_WRITEBACKFULL     5'b10001 // Writebackfull
`define AR_CREDIT_WIDTH 3


`define CR_ID_WIDTH 3
`define CR_RESP_WIDTH 3
`define CR_RESP_UC    3'b011
`define CR_RESP_UD    3'b010
`define CR_RESP_SC    3'b001
`define CR_RESP_I     3'b000
`define CR_RESP_UC_PD 3'b111
`define CR_RESP_SC_PD 3'b001
`define CR_RESP_I_PD  3'b000

`define WD_DBID_WIDTH 4
`define WD_STRB_WIDTH 32
`define WD_DATA_WIDTH 256
`define WD_DATAID_WIDTH 2
`define WD_STATE_WIDTH 2
`define WD_RESP_UD 2'b10
`define WD_RESP_UC 2'b11
`define WD_RESP_SC 2'b01
`define WD_RESP_I  2'b00



`define L1D_BANK_SIZE L1D_BANK_SIZE
`define L1D_CACHELINE_SIZE L1D_CACHELINE_SIZE
`define PA_WIDTH PA_WIDTH
`define VA_WIDTH VA_WIDTH
`define L1D_SIZE L1D_SIZE
`define L1D_NUM_WAYS L1D_NUM_WAYS
`define STB_NUM STB_NUM
`define REFILL_NUM REFILL_NUM
`define SNPSLV_NUM SNPSLV_NUM
`define VICTIM_NUM VICTIM_NUM
`define INSTRUCTION_WIDTH INSTRUCTION_WIDTH
`define MEM_CACHE_ADDR_MIN MEM_CACHE_ADDR_MIN
`define MEM_CACHE_ADDR_MAX MEM_CACHE_ADDR_MAX

`define L1D_TAG_STATE_WIDTH 2
`define L1D_SET_WIDTH ($clog2(L1D_SIZE/(L1D_CACHELINE_SIZE*L1D_NUM_WAYS)))

`define L1D_CACHELINE_WIDTH $clog2(`L1D_CACHELINE_SIZE)
`define L1D_CACHELINE_LSB 0
`define L1D_CACHELINE_MSB (`L1D_CACHELINE_LSB + `L1D_CACHELINE_WIDTH - 1)

`define L1D_SET_LSB `L1D_CACHELINE_WIDTH
`define L1D_SET_MSB (`L1D_SET_LSB + `L1D_SET_WIDTH - 1)

`define L1D_BANK_WIDTH (`L1D_SET_WIDTH + $clog2(`L1D_CACHELINE_SIZE/`L1D_BANK_SIZE))
`define L1D_BANK_LSB $clog2(`L1D_BANK_SIZE)
`define L1D_BANK_MSB (`L1D_BANK_WIDTH + `L1D_BANK_LSB - 1)

`define L1D_TAG_ADDR_WIDTH (`PA_WIDTH - `L1D_SET_WIDTH - `L1D_CACHELINE_WIDTH)
`define L1D_TAG_ADDR_LSB (`L1D_SET_WIDTH + `L1D_CACHELINE_WIDTH)
`define L1D_TAG_ADDR_MSB (`PA_WIDTH - 1)
`define L1D_TAG_DATA_WIDTH (PA_WIDTH-`L1D_SET_WIDTH-$clog2(L1D_CACHELINE_SIZE))
`define L1D_TAG_WIDTH (`L1D_TAG_DATA_WIDTH + `L1D_TAG_STATE_WIDTH)
